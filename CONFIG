# Here is the server config scripts I used to setup the Amazon EC2 instance.
# These tests were run on a Medium-sized, High CPU Instance of EC2 running a bare bones
# Ubuntu 8.10 install: ami-0372946a
# 
# You can copy the "EC2 Instance Config" section into a script and run it right on the server
# to get everything set up.
#
#
# Notes about the tests:
#
# Public DNS: ec2-75-101-169-84.compute-1.amazonaws.com
#
# Connection at time of tests: http://www.speedtest.net/result/513732258.png
#
# Server ping response at time of tests:
# 64 bytes from 75.101.169.84: icmp_seq=0 ttl=51 time=95.495 ms
# 64 bytes from 75.101.169.84: icmp_seq=1 ttl=51 time=95.655 ms
# 64 bytes from 75.101.169.84: icmp_seq=2 ttl=51 time=94.861 ms
# 64 bytes from 75.101.169.84: icmp_seq=3 ttl=51 time=95.168 ms
# 64 bytes from 75.101.169.84: icmp_seq=4 ttl=51 time=100.352 ms
# 64 bytes from 75.101.169.84: icmp_seq=5 ttl=51 time=95.381 ms
# 64 bytes from 75.101.169.84: icmp_seq=6 ttl=51 time=96.004 ms
# 64 bytes from 75.101.169.84: icmp_seq=7 ttl=51 time=95.918 ms
# 64 bytes from 75.101.169.84: icmp_seq=8 ttl=51 time=95.444 ms
#
# Everything was installed and checked to work, then the server was rebooted to start
# fresh. My local desktop was rebooted as well and only Terminal, TextMate and Numbers
# were opened so that the tests could be run and results recorded.
#
# When switching to a new framework/server a test was run once to make sure everything
# was loaded into memory before running and recording the real results.
#
# Testing script (run 11 times, the first is discarded:
#
# ab -n 10000 -c 50 -q http://127.0.0.1:3000/ | grep 'Requests per' && \
# ab -n 10000 -c 50 -q http://127.0.0.1:3000/ | grep 'Requests per' && \
# ab -n 10000 -c 50 -q http://127.0.0.1:3000/ | grep 'Requests per' && \
# ab -n 10000 -c 50 -q http://127.0.0.1:3000/ | grep 'Requests per' && \
# ab -n 10000 -c 50 -q http://127.0.0.1:3000/ | grep 'Requests per' && \
# ab -n 10000 -c 50 -q http://127.0.0.1:3000/ | grep 'Requests per' && \
# ab -n 10000 -c 50 -q http://127.0.0.1:3000/ | grep 'Requests per' && \
# ab -n 10000 -c 50 -q http://127.0.0.1:3000/ | grep 'Requests per' && \
# ab -n 10000 -c 50 -q http://127.0.0.1:3000/ | grep 'Requests per' && \
# ab -n 10000 -c 50 -q http://127.0.0.1:3000/ | grep 'Requests per' && \
# ab -n 10000 -c 50 -q http://127.0.0.1:3000/ | grep 'Requests per'



# =====================
# EC2 Instance Config
# =====================

apt-get update && apt-get upgrade -y
apt-get install zlib1g zlib1g-dev zlibc libssl-dev libsqlite3-dev apache2 nginx git-core
/etc/init.d/apache2 stop

# install ruby
cd /tmp
wget http://rubyforge.org/frs/download.php/56686/ruby-1.9.1-p129.tar.gz
tar xzvf ruby-1.9.1-p129.tar.gz
cd /tmp/ruby-1.9.1-p129
./configure
make && make install

# install rubygems
cd /tmp
wget http://rubyforge.org/frs/download.php/57643/rubygems-1.3.4.tgz
tar xzvf rubygems-1.3.4.tgz
cd /tmp/rubygems-1.3.4
ruby setup.rb

# install gems (sqlite3 is required because Rails wants to connect to a DB, even if there's no DB code)
gem install rake rack thin sinatra haml builder sqlite3-ruby

# checkout code
cd /mnt
git clone git://github.com/cannikin/performance.git
cd /mnt/performance



# =====================
# Nginx Config  /etc/nginx/sites-available/default
# =====================

server {
	listen   80;
	server_name  localhost;

	access_log  /var/log/nginx/localhost.access.log;

	location / {
		root   /mnt/performance/web/nginx;
		index  index.html;
	}
}



# =====================
# Apache Config  /etc/apahce2/sites-available/default
# =====================

# For testing plain HTML serving
<VirtualHost *:80>
	ServerAdmin webmaster@localhost
	
	DocumentRoot /mnt/performance/web/apache
	<Directory />
		Options FollowSymLinks
		AllowOverride None
	</Directory>

	CustomLog /var/log/apache2/access.log combined
</VirtualHost>

# For testing Passenger serving
<VirtualHost *:3000>
	ServerAdmin webmaster@localhost
	
	DocumentRoot /mnt/performance/web/apache
	<Directory />
		Options FollowSymLinks
		AllowOverride None
	</Directory>

	CustomLog /var/log/apache2/access.log combined
</VirtualHost>



# =====================
# Test Procedure
# =====================

# to run & test rack
ruby /mnt/performace/rack/erb.rb
ab -n 1000 -c 10 -q http://127.0.0.1:3000/

# to run & test sinatra
ruby /mnt/performance/sinatra/erb.rb -e production -p 3000
ab -n 1000 -c 10 -q http://127.0.0.1:3000/

# to run & test rails-thin
thin start -c /mnt/performance/rails -e production -p 3000
ab -n 1000 -c 10 -q http://127.0.0.1:3000/go/erb

# to run & test rails-passenger
/etc/init.d/apache2 start
ab -n 1000 -c 10 -q http://127.0.0.1:3000/go/erb

# to run & test nginx
/etc/init.d/nginx start
ab -n 1000 -c 10 -q http://127.0.0.1/

# to run & test apache
/etc/init.d/apache2 start
ab -n 1000 -c 10 -q http://127.0.0.1/
